// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyApp.Web.Data;

namespace MyApp.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20191108202704_CompleteDB")]
    partial class CompleteDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyApp.Web.Data.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CellPhone")
                        .HasMaxLength(20);

                    b.Property<int?>("CompanyTypeId");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("GRXX");

                    b.Property<string>("GRYY");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CompanyTypeId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("MyApp.Web.Data.Entities.CompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("CompanyTypes");
                });

            modelBuilder.Entity("MyApp.Web.Data.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdSubject");

                    b.Property<int?>("QuestionTypeId");

                    b.Property<string>("Subject");

                    b.HasKey("Id");

                    b.HasIndex("QuestionTypeId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("MyApp.Web.Data.Entities.QuestionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyTypeId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CompanyTypeId");

                    b.ToTable("QuestionTypes");
                });

            modelBuilder.Entity("MyApp.Web.Data.Entities.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("MyApp.Web.Data.Entities.Technical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100);

                    b.Property<string>("CellPhone")
                        .HasMaxLength(20);

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Technicals");
                });

            modelBuilder.Entity("MyApp.Web.Data.Entities.Visit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId");

                    b.Property<DateTime>("Date");

                    b.Property<int?>("StateId");

                    b.Property<int?>("TechnicalId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("StateId");

                    b.HasIndex("TechnicalId");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("MyApp.Web.Data.Entities.Company", b =>
                {
                    b.HasOne("MyApp.Web.Data.Entities.CompanyType", "CompanyType")
                        .WithMany("Companies")
                        .HasForeignKey("CompanyTypeId");
                });

            modelBuilder.Entity("MyApp.Web.Data.Entities.Question", b =>
                {
                    b.HasOne("MyApp.Web.Data.Entities.QuestionType", "QuestionType")
                        .WithMany("Questions")
                        .HasForeignKey("QuestionTypeId");
                });

            modelBuilder.Entity("MyApp.Web.Data.Entities.QuestionType", b =>
                {
                    b.HasOne("MyApp.Web.Data.Entities.CompanyType", "CompanyType")
                        .WithMany("QuestionTypes")
                        .HasForeignKey("CompanyTypeId");
                });

            modelBuilder.Entity("MyApp.Web.Data.Entities.Visit", b =>
                {
                    b.HasOne("MyApp.Web.Data.Entities.Company", "Company")
                        .WithMany("Visits")
                        .HasForeignKey("CompanyId");

                    b.HasOne("MyApp.Web.Data.Entities.State", "State")
                        .WithMany("Visit")
                        .HasForeignKey("StateId");

                    b.HasOne("MyApp.Web.Data.Entities.Technical", "Technical")
                        .WithMany("Visits")
                        .HasForeignKey("TechnicalId");
                });
#pragma warning restore 612, 618
        }
    }
}
